"use strict";
(self.webpackChunkv1_0_0 = self.webpackChunkv1_0_0 || []).push([
    [682],
    {
        9258: (e, t, n) => {
            var o = n(1425),
                a = n(1500),
                l = n(2505),
                i = n.n(l),
                s = n(9709);
            const c = (0, o.Lk)("h1", null, "Output message", -1),
                r = { class: "example" },
                d = (0, o.Lk)("hr", null, null, -1),
                u = (0, o.Lk)("h1", null, "Simple Computed Example", -1),
                h = { class: "example" },
                p = (0, o.Lk)("p", null, "Has published books:", -1),
                g = (0, o.Lk)("p", null, "Has published books:", -1),
                m = { key: 0 },
                f = { key: 1 },
                k = (0, o.Lk)("hr", null, null, -1),
                y = (0, o.Lk)("h1", null, "Watcher Example", -1),
                w = { action: "#" },
                v = (0, o.Lk)("label", { for: "fname" }, "First name:", -1),
                b = (0, o.Lk)("br", null, null, -1),
                C = (0, o.Lk)("label", { for: "fname" }, "Last name:", -1),
                x = (0, o.Lk)("hr", null, null, -1),
                L = (0, o.Lk)("h1", null, "Methods Example", -1),
                _ = { class: "example" },
                E = (0, o.Lk)("hr", null, null, -1),
                N = (0, o.Lk)("h1", null, "Methods create", -1),
                S = { action: "#" },
                A = (0, o.Lk)("label", { for: "fname" }, "First name:", -1),
                F = (0, o.Lk)("br", null, null, -1),
                P = (0, o.Lk)("hr", null, null, -1),
                I = (0, o.Lk)("h1", null, "Child Component", -1),
                M = {
                    data: () => ({ items: [] }),
                    mounted() {
                        this.fetch();
                    },
                    methods: {
                        fetch() {
                            const e = this;
                            axios
                                .get("/posts")
                                .then(function (t) {
                                    e.items = t.data;
                                })
                                .catch(function (e) {})
                                .then(function () {});
                        },
                    },
                };
            var B = n(6262);
            const T = {
                    components: {
                        "component-b": (0, B.A)(M, [
                            [
                                "render",
                                function (e, t, n, a, l, i) {
                                    return (
                                        (0, o.uX)(),
                                        (0, o.CE)("ul", null, [
                                            ((0, o.uX)(!0),
                                            (0, o.CE)(
                                                o.FK,
                                                null,
                                                (0, o.pI)(l.items, (e) => ((0, o.uX)(), (0, o.CE)("li", null, (0, o.v_)(e.title.rendered), 1))),
                                                256
                                            )),
                                        ])
                                    );
                                },
                            ],
                        ]),
                    },
                    data: () => ({ msg: "Hello world!", author: { name: "John Doe", books: [{ category: "Laravel" }, { category: "PHP" }, { category: "Codeigniter" }] }, firstName: "Foo", lastName: "Bar", fullName: "Foo Bar" }),
                    mounted() {
                        console.log("Component mounted.");
                    },
                    methods: {
                        magic() {
                            return this.author.name;
                        },
                        create() {
                            "" == this.firstName ? alert("Please enter a first name") : alert(`We created a new user ${this.firstName}`);
                        },
                    },
                    computed: {
                        publishedBooksMessage() {
                            return this.author.books.length > 0 ? "Yes" : "No";
                        },
                    },
                    watch: {
                        firstName(e) {
                            this.fullName = e + " " + this.lastName;
                        },
                        lastName(e) {
                            this.fullName = this.firstName + " " + e;
                        },
                    },
                },
                H = (0, B.A)(T, [
                    [
                        "render",
                        function (e, t, n, a, l, i) {
                            const s = (0, o.g2)("component-b");
                            return (
                                (0, o.uX)(),
                                (0, o.CE)(
                                    o.FK,
                                    null,
                                    [
                                        (0, o.Q3)(" Show message "),
                                        c,
                                        (0, o.Lk)("div", r, (0, o.v_)(l.msg), 1),
                                        d,
                                        (0, o.Q3)(" Computed "),
                                        u,
                                        (0, o.Lk)("div", h, [
                                            (0, o.Q3)(" Good "),
                                            p,
                                            (0, o.Lk)("span", null, (0, o.v_)(i.publishedBooksMessage), 1),
                                            (0, o.Q3)(" Bad "),
                                            g,
                                            l.author.books.length > 0 ? ((0, o.uX)(), (0, o.CE)("span", m, "Yes")) : ((0, o.uX)(), (0, o.CE)("span", f, "No")),
                                        ]),
                                        k,
                                        (0, o.Q3)(" Watcher "),
                                        y,
                                        (0, o.Lk)("form", w, [
                                            v,
                                            (0, o.bo)((0, o.Lk)("input", { type: "text", name: "fname", "onUpdate:modelValue": t[0] || (t[0] = (e) => (l.firstName = e)) }, null, 512), [[o.Jo, l.firstName]]),
                                            b,
                                            C,
                                            (0, o.bo)((0, o.Lk)("input", { type: "text", name: "lname", "onUpdate:modelValue": t[1] || (t[1] = (e) => (l.lastName = e)) }, null, 512), [[o.Jo, l.lastName]]),
                                        ]),
                                        (0, o.Lk)("strong", null, "Output: " + (0, o.v_)(l.fullName), 1),
                                        x,
                                        (0, o.Q3)(" Methods "),
                                        L,
                                        (0, o.Lk)("div", _, (0, o.v_)(i.magic()), 1),
                                        E,
                                        (0, o.Q3)(" Method Create "),
                                        N,
                                        (0, o.Lk)("form", S, [
                                            A,
                                            (0, o.bo)((0, o.Lk)("input", { type: "text", name: "fname", "onUpdate:modelValue": t[2] || (t[2] = (e) => (l.firstName = e)) }, null, 512), [[o.Jo, l.firstName]]),
                                            F,
                                            (0, o.Lk)("input", { type: "button", value: "Create", onClick: t[3] || (t[3] = (...e) => i.create && i.create(...e)) }),
                                        ]),
                                        P,
                                        (0, o.Q3)(" Child Component "),
                                        I,
                                        (0, o.bF)(s),
                                    ],
                                    64
                                )
                            );
                        },
                    ],
                ]);
            window.jQuery = window.$ = n(4692);
            class U {
                constructor() {
                    a.os.registerPlugin(s.A);
                }
                scroll() {
                    let e = document.getElementsByTagName("body")[0];
                    window.onscroll = function () {
                        window.pageYOffset > 100 ? e.classList.add("scrolling") : e.classList.remove("scrolling");
                    };
                }
                Vue() {
                    i().defaults.baseURL = apiUrl;
                    const e = (0, o.Ef)({
                        components: { "component-a": H },
                        mounted() {
                            console.log("VueJS is ready.");
                        },
                    });
                    e.mount("#app"), (e.config.devtools = !0);
                }
            }
            var z = n(2522),
                O = n.n(z);
            class R {
                constructor() {
                    this.dateTrigger(),
                        this.carousel(),
                        this.faq(),
                        this.accordions(),
                        this.carouselAuto(),
                        this.initializeCalendar(),
                        this.filter(),
                        this.initializeFilters(),
                        this.menu(),
                        this.stickySearch(),
                        this.addHeaderClass(),
                        this.onRedirectToSykes(),
                        this.saveFavourite(),
                        this.checkInFavourite(),
                        this.paddingHero(),
                        this.heroSearch(),
                        this.map();
                }
                heroSearch() {
                    const e = $(".v01293-homepage-search form"),
                        t = $("#pet-toggle"),
                        n = $("#filter"),
                        o = $("#combined-filter"),
                        a = new URLSearchParams(window.location.search).get("filter");
                    a &&
                        a.split(",").forEach((e) => {
                            "allows-pets" === e ? t.prop("checked", !0) : n.val(e);
                        }),
                        e.on("submit", function () {
                            let e = $.trim(n.val());
                            t.is(":checked") && (e = e ? `${e},allows-pets` : "allows-pets"), o.val(e);
                        });
                }
                isIOS() {
                    return /iPhone|iPad|iPod/i.test(navigator.userAgent);
                }
                paddingHero() {
                    const e = () => {
                        const e = $("section.v01293-hero").next();
                        if (e.length) {
                            const t = e.find(".main");
                            t.length && t.css("padding-top", "120px");
                        }
                    };
                    $(window).width() < 768 && e(),
                        $(window).resize(() => {
                            $(window).width() < 768 && e();
                        });
                }
                dateTrigger() {
                    this.isIOS()
                        ? ($("#checkin, #checkout").css({ opacity: "0", position: "absolute", pointerEvents: "none" }),
                          $("#checkin_display").on("click", () => $("#checkin_hidden").focus()),
                          $("#checkout_display").on("click", () => $("#checkout_hidden").focus()),
                          $("#checkin_hidden").on("change", function () {
                              $("#checkin_display").val($(this).val());
                          }),
                          $("#checkout_hidden").on("change", function () {
                              $("#checkout_display").val($(this).val());
                          }))
                        : ($("#checkin_display, #checkout_display").remove(), $("#checkin_hidden, #checkout_hidden").css({ opacity: "1", position: "relative", pointerEvents: "auto" }));
                }
                checkInFavourite() {
                    const e = this.getCookie("favourites"),
                        t = e ? e.split(",").map((e) => e.trim()) : [];
                    $("[data-id]").each(function () {
                        const e = $(this).data("id").toString();
                        $(this).toggleClass("in-favourite", t.includes(e));
                    });
                }
                saveFavourite() {
                    const e = this;
                    $("#favouriteButton").on("click", function () {
                        const t = $(this).data("id").toString();
                        let n = e.getCookie("favourites"),
                            o = n ? n.split(",").map((e) => e.trim()) : [];
                        o.includes(t) ? (o = o.filter((e) => e !== t)) : o.push(t), e.setCookie("favourites", o.join(","), 30), $(this).toggleClass("in-favourite", o.includes(t));
                    });
                }
                getCookie(e) {
                    const t = `; ${document.cookie}`.split(`; ${e}=`);
                    return 2 === t.length ? t.pop().split(";").shift() : null;
                }
                setCookie(e, t, n) {
                    const o = new Date();
                    o.setTime(o.getTime() + 24 * n * 60 * 60 * 1e3), (document.cookie = `${e}=${t}; expires=${o.toUTCString()}; path=/`);
                }
                onRedirectToSykes() {
    // ✅ Skip modal if user is returning from Sykes (via back button)
    if (sessionStorage.getItem("redirectedToSykes") === "true") {
        sessionStorage.removeItem("redirectedToSykes");
        return;
    }

    // ✅ Attach click handler for redirect
    $("#book-now").on("click", function (e) {
        e.preventDefault();

        const redirectUrl = $(this).attr("href");

        // Show the modal
        $("aside.modal").addClass("open");

        // Set session flag BEFORE redirect
        sessionStorage.setItem("redirectedToSykes", "true");

        // Redirect after short delay
        setTimeout(() => {
            window.location.href = redirectUrl;
        }, 1500);
    });
}
                addHeaderClass() {
                    $("section.hero").hasClass("style-3") && $("header.primary").addClass("style-3");
                }
                stickySearch() {
                    const e = $("section.hero"),
                        t = $("aside.search");
                    if (e.length && t.length) {
                        const n = e.offset().top + e.outerHeight();
                        $(window).on("scroll", () => {
                            $(window).scrollTop() > n ? t.addClass("show") : t.removeClass("show");
                        });
                    }
                }
                menu() {
                    const e = $("body");
                    $(".burger").on("click", function () {
                        $(this).toggleClass("open"), $("nav.menu").toggleClass("open"), e.toggleClass("menu fixed").removeClass("scrolling"), $(".burger .label-menu").text($("nav.menu").hasClass("open") ? "Close" : "Menu");
                    });
                }
                map() {
                    let e = $("section.v01293-map"),
                        t = $("svg", e),
                        n = $(".locations-list", e);
                    $("path", t).each(function () {
                        let e = $(this),
                            t = e.data("id"),
                            o = e.data("slug"),
                            a = e.data("count"),
                            l = t.replace(/-/g, " ").replace(/\b\w/g, function (e) {
                                return e.toUpperCase();
                            }),
                            i = $(`<a href="/regions/${o}" data-path-id="${t}">${l} (${a})</a>`);
                        n.append($("<li>").append(i)),
                            e.hover(
                                function () {
                                    e.css("fill", "#438269"), i.addClass("hover");
                                },
                                function () {
                                    e.css("fill", ""), i.removeClass("hover");
                                }
                            ),
                            i.hover(
                                function () {
                                    e.css("fill", "#438269");
                                },
                                function () {
                                    e.css("fill", "");
                                }
                            ),
                            e.click(function (e) {
                                i.get(0).click();
                            }),
                            i.click(function (e) {
                                e.preventDefault(), console.log("Anchor tag clicked:", l), (window.location.href = $(this).attr("href"));
                            });
                    });
                }
                initializeFilters() {
                    new URLSearchParams(window.location.search).getAll("filter").forEach((e) => {
                        e.split(",").forEach((e) => {
                            $(`#filterForm input[type="checkbox"][value="${e}"]`).prop("checked", !0).closest(".carousel-cell").addClass("selected");
                        });
                    });
                }
                filter() {
                    $(document).on("click", ".carousel-cell", function () {
                        const e = $(this).find('input[type="checkbox"]');
                        e.prop("checked", !e.prop("checked")), $(this).toggleClass("selected");
                    }),
                        $("#applyFilterBtn").on("click", () => {
                            const e = $('#filterForm input[type="checkbox"]:checked')
                                .map(function () {
                                    return $(this).val();
                                })
                                .get();
                            this.updateFilters(e);
                        }),
                        $("#resetFilterBtn").on("click", () => {
                            $('#filterForm input[type="checkbox"]').prop("checked", !1).closest(".carousel-cell").removeClass("selected"), this.updateFilters([]);
                        });
                }
                updateFilters(e) {
                    const t = new URLSearchParams(window.location.search);
                    t.delete("filter"), e.length && t.append("filter", e.join(",")), (window.location.href = `${window.location.pathname}?${t.toString()}${window.location.hash}`);
                }
                faq() {
                    $("article.faq .heading").on("click", function () {
                        $(this).closest("article").toggleClass("open");
                    });
                }
                accordions() {
                    $("article.accordion .heading").on("click", function () {
                        const e = $(this).closest("article");
                        e.toggleClass("open"), $(".label", e).text(e.hasClass("open") ? "Read Less" : "Read More");
                    });
                }
                initializeCalendar() {
                    const e = $("#calendar"),
                        t = e.attr("data-availability");
                    if (!t) return !1;
                    try {
                        const n = JSON.parse(t).reduce((e, t) => ((e[t.date] = t.status), e), {}),
                            o = new Pikaday({
                                field: e[0],
                                bound: !1,
                                onDraw: function () {
                                    const e = document.querySelectorAll(".pika-single .pika-day"),
                                        t = new Date().setHours(0, 0, 0, 0);
                                    e.forEach((e) => {
                                        const o = `${e.getAttribute("data-pika-year")}-${(parseInt(e.getAttribute("data-pika-month")) + 1).toString().padStart(2, "0")}-${e.textContent.padStart(2, "0")}`;
                                        if (new Date(o).setHours(0, 0, 0, 0) >= t) {
                                            const t = n[o],
                                                a = document.createElement("span");
                                            (a.textContent = e.textContent), (e.innerHTML = ""), e.appendChild(a), "Available" === t ? e.classList.add("available-date") : "Not Available" === t && e.classList.add("unavailable-date");
                                        }
                                    });
                                },
                            });
                        document.getElementById("calendar-container").appendChild(o.el);
                    } catch (e) {
                        console.error("Error parsing availability JSON:", e);
                    }
                }
                carousel() {
                    let e = a.os.utils.toArray(".slider");
                    if (!e.length) return !1;
                    e.forEach((e) => {
                        const t = $(".main-carousel", e)[0],
                            n = $(e).find(".next"),
                            o = $(e).find(".prev"),
                            a = $(e).find(".dots"),
                            l = a.find("li"),
                            i = new (O())(t, { cellAlign: "left", contain: !1, pageDots: !1, prevNextButtons: !0 });
                        i.on("select", () => {
                            const e = i.selectedIndex;
                            l.removeClass("active"), l.eq(e).addClass("active");
                        }),
                            a.on("click", "li", function () {
                                i.select($(this).index());
                            }),
                            n.on("click", () => i.next()),
                            o.on("click", () => i.previous());
                    });
                }
                carouselAuto() {
                    let e = a.os.utils.toArray(".slider-auto");
                    if (!e.length) return !1;
                    e.forEach((e) => {
                        const t = $(".main-carousel", e)[0],
                            n = $(e).find(".next"),
                            o = $(e).find(".prev"),
                            a = $(e).find(".dots"),
                            l = a.find("li"),
                            i = new (O())(t, { cellAlign: "center", contain: !0, pageDots: !1, autoPlay: !0, prevNextButtons: !1, adaptiveHeight: !0 });
                        i.on("select", () => {
                            const e = i.selectedIndex;
                            l.removeClass("active"), l.eq(e).addClass("active");
                        }),
                            a.on("click", "li", function () {
                                i.select($(this).index());
                            }),
                            n.on("click", () => i.next()),
                            o.on("click", () => i.previous());
                    });
                }
            }
            var D = n(8607);
            class Q {
                constructor() {
                    let e = D.os.utils.toArray("section");
                    if (!e.length) return !1;
                    e.forEach((e) => {
                        let t = D.os.timeline({ scrollTrigger: { trigger: e, start: "top 85%", toggleActions: "play" } });
                        $(".fade-in", e).length && t.from($(".fade-in > *", e), { yPercent: 10, duration: 1, opacity: 0, stagger: 0.25, ease: "power4.out" }, 0.5);
                    }),
                        this.parallax();
                }
                parallax() {
                    $(".parallax img").each(function () {
                        const e = $(this);
                        D.os.to(e, { yPercent: 25, ease: "none", scrollTrigger: { trigger: e[0], start: "top bottom", end: "bottom top", scrub: !0 } });
                    });
                }
            }
            class q {
                constructor() {
                    $(document).ready(this.initAutocomplete.bind(this)), $(document).ready(this.initMap.bind(this)), $(document).ready(this.initSingleMap.bind(this)), $(document).ready(this.closePropertyView.bind(this));
                }
                initAutocomplete() {
                    $(".search-destination").each(function () {
                        var e = $(this),
                            t = e.closest("form"),
                            n = t.find(".search-latitude"),
                            o = t.find(".search-longitude"),
                            a = new window.google.maps.places.Autocomplete(e[0], { types: [], componentRestrictions: { country: "UK" } });
                        function l() {
                            n.val(""), o.val("");
                        }
                        function i() {
                            "" === n.val() && "" === o.val() && t.find('button[type="submit"]').prop("disabled", !0);
                        }
                        a.addListener("place_changed", function () {
                            var e = a.getPlace();
                            if (!e.geometry) return console.log("Place details not found for the selected location."), l(), void i();
                            var s = e.geometry.location.lat(),
                                c = e.geometry.location.lng();
                            n.val(s), o.val(c), t.find('button[type="submit"]').prop("disabled", !1);
                        }),
                            e.on("input", function () {
                                l(), i();
                            }),
                            i();
                    });
                }
                initSingleMap() {
                    const e = document.getElementById("single-map");
                    if (!e) return !1;
                    let t = parseFloat(e.getAttribute("data-lat")),
                        n = parseFloat(e.getAttribute("data-lng"));
                    const o = new google.maps.Map(e, { zoom: 15, center: { lat: t, lng: n } });
                    new google.maps.Marker({ position: { lat: t, lng: n }, map: o, title: "Property Location" });
                }
                initMap() {
                    if (!document.getElementById("map")) return !1;
                    let e = this;
                    const t = {
                            "cottages-in-east-midlands": { lat: 52.5, lng: -1 },
                            "cottages-in-eastern-england": { lat: 52, lng: 0.5 },
                            "cottages-in-north-east-england": { lat: 54.5, lng: -1.5 },
                            "cottages-in-north-west-england": { lat: 53.5, lng: -2.5 },
                            "cottages-in-northern-ireland": { lat: 54.5, lng: -5.9 },
                            "cottages-in-scotland": { lat: 56, lng: -4 },
                            "cottages-in-south-east-england": { lat: 51.5, lng: 0.1 },
                            "cottages-in-south-west-england": { lat: 50.5, lng: -3 },
                            "cottages-in-wales": { lat: 52.5, lng: -3.5 },
                            "cottages-in-west-midlands": { lat: 52.4, lng: -1.9 },
                            "cottages-in-london": { lat: 51.5074, lng: -0.1278 },
                            "cottages-in-yorkshire-and-the-humber": { lat: 53.5, lng: -1 },
                            whitby: { lat: 54.485, lng: -0.611 },
                            salcombe: { lat: 50.243, lng: -3.769 },
                            dartmouth: { lat: 50.353, lng: -3.573 },
                            weymouth: { lat: 50.625, lng: -2.459 },
                            newquay: { lat: 50.416, lng: -5.075 },
                            keswick: { lat: 54.605, lng: -3.133 },
                            "bowness-on-windermere": { lat: 54.355, lng: -2.915 },
                            scarborough: { lat: 54.28, lng: -0.42 },
                            "wells-next-the-sea": { lat: 52.957, lng: 0.85 },
                            filey: { lat: 54.195, lng: -0.29 },
                            llandudno: { lat: 53.315, lng: -3.825 },
                            benllech: { lat: 53.315, lng: -4.215 },
                            rhosneigr: { lat: 53.23, lng: -4.505 },
                            conwy: { lat: 53.27, lng: -3.82 },
                            falmouth: { lat: 50.157, lng: -5.07 },
                            ambleside: { lat: 54.42, lng: -2.955 },
                            looe: { lat: 50.349, lng: -4.445 },
                            "st-agnes": { lat: 50.3, lng: -5.18 },
                            lanreath: { lat: 50.385, lng: -4.525 },
                            pwllheli: { lat: 52.88, lng: -4.405 },
                            torquay: { lat: 50.46, lng: -3.525 },
                            haworth: { lat: 53.82, lng: -1.945 },
                            bridlington: { lat: 54.09, lng: -0.18 },
                            crantock: { lat: 50.4, lng: -5.095 },
                            marazion: { lat: 50.122, lng: -5.455 },
                            beaumaris: { lat: 53.26, lng: -4.085 },
                        },
                        n = new URLSearchParams(window.location.search),
                        o = parseFloat(n.get("latitude")),
                        a = parseFloat(n.get("longitude")),
                        l = !isNaN(o) && !isNaN(a),
                        i = window.location.pathname.includes("/regions/") || window.location.pathname.includes("/towns/");
                    let s = { lat: 54, lng: -2 },
                        c = 5;
                    if (l) (s = { lat: o, lng: a }), (c = 10);
                    else if (i) {
                        const e = t[window.location.pathname.split("/")[2]];
                        e && ((s = e), (c = 6));
                    }
                    var r = new google.maps.Map(document.getElementById("map"), { zoom: c, center: s });
                    locations.forEach(function (t) {
                        var n = new google.maps.Marker({
                            position: { lat: t.lat, lng: t.lng },
                            map: r,
                            title: t.title,
                            label: { text: `£${t.price}`, color: "white", fontSize: "10px", fontWeight: "bold" },
                            icon: { path: google.maps.SymbolPath.CIRCLE, scale: 20, fillColor: "#272727", fillOpacity: 1, strokeWeight: 0 },
                        });
                        e.loadProperty(n, t);
                    });
                }
                closePropertyView() {
                    let e = $("#property-information"),
                        t = $(".close-map"),
                        n = $("body");
                    t.on("click", function () {
                        n.removeClass("overlay"), e.removeClass("show");
                    });
                }
                loadProperty(e, t) {
                    let n = $("body"),
                        o = $("#property-information"),
                        a = ($("section.cottage-archive"), o[0].querySelector(".carousel")),
                        l = $(o).find(".next"),
                        i = $(o).find(".prev");
                    $(o).find(".dots"),
                        e.addListener("click", function () {
                            n.addClass("overlay"),
                                $.ajax({
                                    url: `/wp-json/wp/v2/properties/${t.id}`,
                                    method: "GET",
                                    success: function (e) {
                                        let t = e.acf.sykes_property_images_resized.split("\n");
                                        a.flickityInstance && (a.flickityInstance.destroy(), (a.flickityInstance = null)),
                                            (a.innerHTML = ""),
                                            t.forEach(function (e) {
                                                if (e) {
                                                    let t = document.createElement("div");
                                                    t.classList.add("carousel-cell");
                                                    let n = document.createElement("figure"),
                                                        o = document.createElement("img");
                                                    (o.src = e), (o.alt = "Property Image"), n.appendChild(o), t.appendChild(n), a.appendChild(t);
                                                }
                                            }),
                                            (a.flickityInstance = new (O())(a, { cellAlign: "left", pageDots: !1, prevNextButtons: !1 })),
                                            l.off("click").on("click", function () {
                                                a.flickityInstance.next();
                                            }),
                                            i.off("click").on("click", function () {
                                                a.flickityInstance.previous();
                                            }),
                                            window.dispatchEvent(new Event("resize")),
                                            o.addClass("show"),
                                            [
                                                { selector: "h2", text: e.acf.sykes_property_name },
                                                { selector: ".region", text: e.acf.sykes_property_region },
                                                { selector: ".rating", text: e.acf.sykes_property_rating },
                                                { selector: ".description", text: e.acf.sykes_short_description },
                                                { selector: ".bedrooms", text: e.acf.sykes_property_bedrooms },
                                                { selector: ".bathrooms", text: e.acf.sykes_property_bathrooms },
                                                { selector: ".price", text: "£" + e.acf.sykes_property_lowest_price },
                                                { selector: ".link", attr: "href", value: e.link },
                                            ].forEach(function (e) {
                                                e.attr ? $(e.selector, o).attr(e.attr, e.value) : $(e.selector, o).text(e.text);
                                            });
                                    },
                                    error: function (e, t, n) {
                                        console.error("Error fetching property information:", n);
                                    },
                                });
                        });
                }
            }
            new q(),
                jQuery(() => {
                    new U(), new R(), new Q(), new q(), console.log("JS Loaded.");
                });
        },
        6262: (e, t) => {
            t.A = (e, t) => {
                const n = e.__vccOpts || e;
                for (const [e, o] of t) n[e] = o;
                return n;
            };
        },
    },
    (e) => {
        e.O(0, [852], () => (9258, e((e.s = 9258)))), e.O();
    },
]);
//# sourceMappingURL=global.min.js.map